// <auto-generated />
using Erantissen_Backend.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Erantissen_Backend.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Erantissen_Backend.Data.Models.CategoryDto", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Title");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.HeroDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paragraph")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hero");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.MostBoughtProductDto", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SubcategoryTitle")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Title");

                    b.HasIndex("SubcategoryTitle");

                    b.ToTable("MostBoughtProducts");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.ProductDto", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SubcategoryTitle")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Title");

                    b.HasIndex("SubcategoryTitle");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.SubcategoryDto", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryTitle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Title");

                    b.HasIndex("CategoryTitle");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.MostBoughtProductDto", b =>
                {
                    b.HasOne("Erantissen_Backend.Data.Models.SubcategoryDto", "Subcategory")
                        .WithMany("MostBoughtProducts")
                        .HasForeignKey("SubcategoryTitle")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.ProductDto", b =>
                {
                    b.HasOne("Erantissen_Backend.Data.Models.SubcategoryDto", "Subcategory")
                        .WithMany("Products")
                        .HasForeignKey("SubcategoryTitle")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.SubcategoryDto", b =>
                {
                    b.HasOne("Erantissen_Backend.Data.Models.CategoryDto", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryTitle")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.CategoryDto", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("Erantissen_Backend.Data.Models.SubcategoryDto", b =>
                {
                    b.Navigation("MostBoughtProducts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
